loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadusr -W lcec_conf ethercat-conf.xml
loadrt lcec
loadrt pid names=pid.x,pid.y,pid.z

addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf lcec.read-all            servo-thread
addf lcec.write-all           servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread

#*******************
#  AXIS X
#*******************

setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.x.maxerror 0.012700

net x-index-enable  <=> pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-pos-fb        =>  pid.x.feedback
net x-output        <=  pid.x.output		

setp lcec.0.X.srv-enable-volt 		1
setp lcec.0.X.srv-fault-reset 		0

net machine-is-on lcec.0.X.srv-fault-reset

# this is the mm per REF that is othervise known as step_scale
# this should include stupid factors for gearing
setp lcec.0.X.pos-scale 5
# This should not be touched for asda-a2

# A3:
# Latest test: Set Egear so that a certain number of pulses per rev is resulting (unclear how this is done with gearing)
setp lcec.0.X.srv-pulses-per-rev 10000 #a3: 10.000
# This is only relevant when an extenral encoder is being used.
setp lcec.0.X.extenc-scale 0.001 # not used as we have not connected the scale


net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-pos-cmd    => lcec.0.X.srv-pos-cmd 
net x-vel-cmd    <= joint.0.vel-cmd
# net x-output     <= lcec.0.X.srv-vel-cmd
net x-pos-fb     <= lcec.0.X.enc-pos-abs
net x-pos-fb     => joint.0.motor-pos-fb
net x-enable     <= joint.0.amp-enable-out
net x-enable     => lcec.0.X.srv-switch-on
net x-enable     => lcec.0.X.srv-enable


#*******************
#  AXIS Y
#*******************

setp   pid.y.Pgain     [JOINT_1]P
setp   pid.y.Igain     [JOINT_1]I
setp   pid.y.Dgain     [JOINT_1]D
setp   pid.y.bias      [JOINT_1]BIAS
setp   pid.y.FF0       [JOINT_1]FF0
setp   pid.y.FF1       [JOINT_1]FF1
setp   pid.y.FF2       [JOINT_1]FF2
setp   pid.y.deadband  [JOINT_1]DEADBAND
setp   pid.y.maxoutput [JOINT_1]MAX_OUTPUT
setp   pid.y.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.y.maxerror 0.012700

net y-index-enable  <=> pid.y.index-enable
net y-enable        =>  pid.y.enable
net y-pos-cmd       =>  pid.y.command
net y-pos-fb        =>  pid.y.feedback
net y-output        <=  pid.y.output		

setp lcec.0.Y.srv-enable-volt 		1
setp lcec.0.Y.srv-fault-reset 		0

net machine-is-on lcec.0.Y.srv-fault-reset

# this is the mm per REF that is othervise known as step_scale
# this should include stupid factors for gearing
setp lcec.0.Y.pos-scale 5
# This should not be touched for asda-a2

# A3:
# Latest test: Set Egear so that a certain number of pulses per rev is resulting (unclear how this is done with gearing)
setp lcec.0.Y.srv-pulses-per-rev 10000 #a3: 10.000
# This is only relevant when an extenral encoder is being used.
setp lcec.0.Y.extenc-scale 0.001 # not used as we have not connected the scale


net y-pos-cmd    <= joint.1.motor-pos-cmd
net y-pos-cmd    => lcec.0.Y.srv-pos-cmd 
net y-vel-cmd    <= joint.1.vel-cmd
# net y-output     <= lcec.0.Y.srv-vel-cmd
net y-pos-fb     <= lcec.0.Y.enc-pos-abs
net y-pos-fb     => joint.1.motor-pos-fb
net y-enable     <= joint.1.amp-enable-out
net y-enable     => lcec.0.Y.srv-switch-on
net y-enable     => lcec.0.Y.srv-enable

#*******************
#  AXIS Z
#*******************

setp   pid.z.Pgain     [JOINT_2]P
setp   pid.z.Igain     [JOINT_2]I
setp   pid.z.Dgain     [JOINT_2]D
setp   pid.z.bias      [JOINT_2]BIAS
setp   pid.z.FF0       [JOINT_2]FF0
setp   pid.z.FF1       [JOINT_2]FF1
setp   pid.z.FF2       [JOINT_2]FF2
setp   pid.z.deadband  [JOINT_2]DEADBAND
setp   pid.z.maxoutput [JOINT_2]MAX_OUTPUT
setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.z.maxerror 0.012700

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-pos-fb        =>  pid.z.feedback
net z-output        <=  pid.z.output		

setp lcec.0.Z.srv-enable-volt 		1
setp lcec.0.Z.srv-fault-reset 		0

net machine-is-on lcec.0.Z.srv-fault-reset

# this is the mm per REF that is othervise known as step_scale
# this should include stupid factors for gearing
setp lcec.0.Z.pos-scale 5
# This should not be touched for asda-a2

# A3:
# Latest test: Set Egear so that a certain number of pulses per rev is resulting (unclear how this is done with gearing)
setp lcec.0.Z.srv-pulses-per-rev 10000 #a3: 10.000
# This is only relevant when an extenral encoder is being used.
setp lcec.0.Z.extenc-scale 0.001 # not used as we have not connected the scale


net z-pos-cmd    <= joint.2.motor-pos-cmd
net z-pos-cmd    => lcec.0.Z.srv-pos-cmd 
net z-vel-cmd    <= joint.2.vel-cmd
# net z-output     <= lcec.0.Z.srv-vel-cmd
net z-pos-fb     <= lcec.0.Z.enc-pos-abs
net z-pos-fb     => joint.2.motor-pos-fb
net z-enable     <= joint.2.amp-enable-out
net z-enable     => lcec.0.Z.srv-switch-on
net z-enable     => lcec.0.Z.srv-enable

#*********************
#   E-STOP
#*********************

setp iocontrol.0.emc-enable-in 1
